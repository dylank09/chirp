// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AuthContainer /> renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        hideShadow={false}
        largeTitleHideShadow={false}
        title="Tutorial"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgb(169,169,169)",
              "flex": 1,
              "justifyContent": "space-around",
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgb(45, 45, 42)",
                "fontSize": 22,
                "fontWeight": "bold",
              }
            }
          >
            Tutorial
          </Text>
          <View
            style={
              Object {
                "height": "85%",
                "width": "85%",
              }
            }
            useNativeDriver={true}
          >
            <Image
              onLoadEnd={[Function]}
              resizeMode="contain"
              source={1}
              style={
                Object {
                  "borderRadius": 30,
                  "height": "100%",
                  "resizeMode": "contain",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 4,
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 30,
                      "height": "100%",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.25,
                      "shadowRadius": 4,
                      "width": "100%",
                    },
                    Object {
                      "backgroundColor": "#eee",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "width": "100%",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgb(193, 73, 83)",
                  "borderRadius": 18,
                  "height": undefined,
                  "margin": 10,
                  "opacity": 1,
                  "padding": 10,
                  "width": "30%",
                }
              }
              testID="button"
            >
              <Text
                style={
                  Object {
                    "color": "rgb(255, 255, 255)",
                    "fontSize": 15,
                  }
                }
              >
                Skip
                 
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgb(193, 73, 83)",
                  "borderRadius": 18,
                  "height": undefined,
                  "margin": 10,
                  "opacity": 1,
                  "padding": 10,
                  "width": "30%",
                }
              }
              testID="button"
            >
              <Text
                style={
                  Object {
                    "color": "rgb(255, 255, 255)",
                    "fontSize": 15,
                  }
                }
              >
                Next
                 
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
