{"version":3,"sources":["assets/loading.gif","assets/logo.png","assets/google-logo.png","assets/tutorial1.png","assets/tutorial2.png","assets/tutorial3.png","assets/Theme.js","functions/FormatTime.js","chats/ChatPreview.js","components/SearchBar.js","chats/Message.js","chats/SendText.js","components/LoadingScreen.js","components/Header.js","components/MemberList.js","components/TextAlert.js","components/ChirpButton.js","config/FirebaseInit.js","config/FirestoreInit.js","components/AddMember.js","config/FirebaseAuthInit.js","chats/ChatOptions.js","chats/ChirpChat.js","components/CreateButton.js","components/ChirpTextBox.js","chats/CreateChat.js","chats/ChirpGroups.js","profile/Statistics.js","profile/ChirpProfile.js","projects/ProjectPreview.js","projects/Deadline.js","projects/AddTodo.js","projects/TodoList.js","projects/ChirpProject.js","components/ChirpSwitch.js","projects/CreateProject.js","functions/GetRemaining.js","projects/ChirpProjects.js","AppContainer.js","components/AuthProviderButton.js","functions/AddUserToDB.js","auth/GoogleSignIn.js","auth/Login.js","auth/Register.js","auth/Tutorial.js","auth/AuthContainer.js","components/NoWifiScreen.js","App.js"],"names":["module","exports","theme","colors","primary","secondary","background","text","placeholderColor","jet","hazeText","lightColors","dimensions","authWidth","standardFontSize","buttonWidth","authButtonWidth","inputHeight","FormatTime","timestamp","type","t","Date","setSeconds","toISOString","today","tpos","indexOf","slice","day","month","toLocaleDateString","toLocaleTimeString","ChatPreview","chatName","previewText","notOpened","previewtimestamp","onPress","TouchableOpacity","style","styles","container","View","chatLogo","Text","fontSize","textAlign","fontWeight","name","message","StyleSheet","create","flexDirection","width","height","borderColor","borderBottomWidth","padding","alignItems","margin","marginLeft","borderRadius","backgroundColor","justifyContent","color","alignSelf","SearchBar","onChange","Ionicons","size","TextInput","searchBox","onChangeText","placeholder","placeholderTextColor","Message","user","me","length","substring","row","messageBox","userAndTime","testID","ts","alignContent","marginBottom","maxWidth","marginHorizontal","marginRight","SendText","setText","send","textInput","value","paddingLeft","marginVertical","LoadingScreen","Image","source","logo","img","flex","Header","header","AntDesign","marginTop","MemberList","members","fsRef","admin","ScrollView","heading","map","mem","i","key","memberContainer","adminMember","regularMember","member","newMembers","filter","update","deleteMember","borderBottomColor","TextAlert","props","alert","ChirpButton","button","buttonText","buttonHeight","firebase","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","AddMember","currentMembers","useState","email","setEmail","addMemberAlert","setAddMemberAlert","query","collection","where","toLowerCase","useCollectionData","idField","validateEmail","e","String","match","optionsText","addMember","memberTextBox","userEmail","includes","push","borderWidth","auth","ChatOptions","id","returnToChat","chatData","returnToMain","chatRef","doc","BackHandler","addEventListener","currentUser","Platform","OS","delete","Alert","chatInfo","createdAt","seconds","chatId","deleteButton","ChirpChat","onBackPress","optionsOpen","setOptionsOpen","scrollViewRef","useRef","uid","userRef","useDocumentData","chat","messagesRef","orderBy","limit","msgs","SimpleLineIcons","messagesBox","ref","onContentSizeChange","current","scrollToEnd","animated","msg","msgId","noMessagesText","KeyboardAvoidingView","bottomBar","behavior","keyboardVerticalOffset","a","async","add","FieldValue","serverTimestamp","membersUnseen","lastMessage","lastMessageTimestamp","CreateButton","MaterialIcons","ChirpTextBox","password","allowMultiline","smallVersion","textBox","secureTextEntry","selectTextOnFocus","selectionColor","multiline","blurOnSubmit","CreateChat","setName","nameError","setNameError","set","back","groupsScroll","outerContainer","emptyGroupsText","paddingTop","Statistics","stat","shadowColor","shadowOffset","shadowRadius","profileHeader","profileImage","profileText","displayName","profileInfo","options","option","ProjectPreview","projectName","nextTodo","remaining","done","left","textDecorationLine","textDecorationStyle","textDecorationColor","todo","right","MaterialCommunityIcons","paddingRight","Deadline","deadlineDate","deadlineTime","date","setDate","mode","setMode","show","setShow","projectRef","project","deadline","showMode","currentMode","showDatepicker","maxHeight","body","buttons","is24Hour","display","event","selectedDate","currentDate","Timestamp","fromDate","setDeadlineDate","AddTodo","todosRef","onSubmit","description","setDescription","assignee","setAssignee","creator","setCreator","setSize","descriptionError","setDescriptionError","todoInfo","pickerRow","pickerHelpText","itemStyle","selectedValue","onValueChange","itemValue","itemIndex","prompt","Item","label","author","todoName","TodoList","todos","createTodo","setCreateTodo","pressDone","todoId","newValue","blankHeading","topSection","Entypo","bottomSection","info","minWidth","ChirpProject","modalVisible","setModalVisible","loading","sort","b","headerButtons","Modal","animationType","transparent","visible","onRequestClose","modalView","shadowOpacity","ChirpSwitch","setValue","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","CreateProject","createChat","setCreateChat","setProjectId","deadlineContainer","projectInfo","createChatText","GetRemaining","Math","floor","getTime","secondsDifference","daysDifference","numDays","numMinutes","headerText","projectScroll","footer","bottomTabNavigator","createBottomTabNavigator","Chat","screen","chatClicked","setChatClicked","createClicked","setCreateClicked","setChatId","setChatName","search","setSearch","chatGroups","chatsRef","groups","goToChat","groupIndex","unseen","updateUnseen","element","array","index","splice","removeElementFromArray","setChatOpenedByUser","goToCreateChat","backToGroups","matches","group","SafeAreaView","grp","navigationOptions","tabBarIcon","focused","Projects","projectClicked","setProjectClicked","projectID","setProjectID","setProjectName","backToList","projects","goToCreateProject","proj","Profile","photoURL","profileURL","handleImagePicked","pickerResult","cancelled","uploadImageAsync","uri","uploadUrl","setUserProfileURL","console","log","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","blob","fileType","currentTime","now","storage","child","put","getDownloadURL","metadata","creationTime","lastSignInTime","signOut","paddingBottom","ImagePicker","mediaTypes","All","allowsEditing","aspect","quality","result","pickImage","FontAwesome5","title","initialRouteName","tabBarOptions","activeTintColor","labelStyle","AppContainer","createAppContainer","AuthProviderButton","buttonLogo","googleLogo","AddUserToDB","usersRef","GoogleSignIn","provider","GoogleAuthProvider","addScope","signInWithPopup","then","catch","error","GoogleAuthentication","androidStandaloneAppClientId","iosStandaloneAppClientId","scopes","logInResult","idToken","accessToken","credential","signInWithCredential","Login","navigation","setPassword","emailError","setEmailError","passwordError","setPasswordError","headingText","inputContainer","signInWithEmailAndPassword","code","orText","registerText","navigate","Register","fullName","setFullName","confirmPassword","setConfirmPassword","continueButton","check","test","validatePassword","createUserWithEmailAndPassword","userCredential","line","loginText","Tutorial","images","tutorial1","tutorial2","tutorial3","numImages","currentIndex","setCurrentIndex","navToRegister","tutorial","resizeMode","bottomButtons","Stack","createNativeStackNavigator","AuthContainer","NavigationContainer","Navigator","Screen","component","headerShown","NoWifiScreen","App","useAuthState","useNetInfo","isConnected","LogBox","ignoreLogs","StatusBar","currentHeight"],"mappings":"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","file":"static/js/app.f1865fc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.0ce002b4.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.dbe9bcb1.png\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.6bc7d493.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorial1.d11ab4f4.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorial2.cb9a704d.png\";","module.exports = __webpack_public_path__ + \"static/media/tutorial3.a47e84c3.png\";","const darkColors = {\r\n  primary: \"rgb(193, 73, 83)\",\r\n  secondary: \"rgb(132, 135, 165)\",\r\n  background: \"rgb(76, 76, 71)\",\r\n  text: \"rgb(255, 255, 255)\",\r\n  placeholderColor: \"rgb(158, 158, 158)\",\r\n  jet: \"rgb(45, 45, 42)\",\r\n  hazeText: \"rgb(169,169,169)\",\r\n};\r\n\r\nconst lightColors = {\r\n  primary: \"rgb(193, 73, 83)\",\r\n  secondary: \"rgb(132, 135, 165)\",\r\n  background: \"#9e9e9e\",\r\n  text: \"rgb(0, 0, 0)\",\r\n  placeholderColor: \"rgb(158, 158, 158)\",\r\n  jet: \"rgb(84, 84, 84)\",\r\n  hazeText: \"rgb(84,84,80)\",\r\n};\r\n\r\nconst dimensions = {\r\n  authWidth: \"75%\",\r\n  standardFontSize: 15,\r\n  buttonWidth: \"40%\",\r\n  authButtonWidth: \"70%\",\r\n  inputHeight: 50,\r\n};\r\n\r\nconst theme = { colors: darkColors, lightColors, dimensions };\r\n\r\nexport { theme };\r\n","// function formats a given timestamp\r\nexport default function FormatTime(timestamp, type = \"short\") {\r\n  if (!timestamp) {\r\n    return \"\";\r\n  }\r\n  var t = new Date(1970, 0, 1); // Epoch\r\n  t.setSeconds(timestamp);\r\n  // convert the timestamp to ISO format\r\n  timestamp = t.toISOString() + \"\";\r\n\r\n  // if we want a short version of formatted timestamp\r\n  if (type === \"short\") {\r\n    var today = new Date().toISOString() + \"\";\r\n    let tpos = timestamp.indexOf(\"T\");\r\n\r\n    if (today.slice(0, tpos) !== timestamp.slice(0, tpos)) {\r\n      timestamp = timestamp.slice(5, tpos);\r\n      let day = timestamp.slice(3, 5);\r\n      let month = timestamp.slice(0, 2);\r\n      timestamp = day + \"/\" + month;\r\n      // returns the timestamp as DD/MM\r\n    } else {\r\n      timestamp = timestamp.slice(tpos + 1, 16);\r\n      // returns the time in 24 hour format e.g. 10:15\r\n    }\r\n    return timestamp;\r\n  } else if (type === \"long\") {\r\n    // returns the full timestamp without formatting\r\n    return timestamp;\r\n  } else if (type === \"date\") {\r\n    // returns the full timestamp but to locale date string format (shows the day and date e.g. Tues 19 May)\r\n    return t.toLocaleDateString();\r\n  } else {\r\n    return t.toLocaleTimeString().slice(0, -3);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport FormatTime from \"../functions/FormatTime\";\r\n\r\nexport default function ChatPreview({\r\n  chatName,\r\n  previewText,\r\n  notOpened,\r\n  previewtimestamp,\r\n  onPress,\r\n}) {\r\n  previewtimestamp = FormatTime(previewtimestamp);\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={onPress}>\r\n      <View style={styles.chatLogo}>\r\n        <Text\r\n          style={{\r\n            fontSize: 20,\r\n            textAlign: \"center\",\r\n            fontWeight: notOpened ? \"bold\" : \"normal\",\r\n          }}\r\n        >\r\n          {chatName ? chatName[0] : \"E\"}\r\n        </Text>\r\n      </View>\r\n      <View>\r\n        <Text\r\n          style={[styles.name, { fontWeight: notOpened ? \"bold\" : \"normal\" }]}\r\n        >\r\n          {chatName ? chatName : \"-\"}\r\n        </Text>\r\n        <Text\r\n          style={[\r\n            styles.message,\r\n            { fontWeight: notOpened ? \"bold\" : \"normal\" },\r\n          ]}\r\n        >\r\n          {previewText ? previewText : \"\"}\r\n        </Text>\r\n      </View>\r\n      <Text\r\n        style={[\r\n          styles.timestamp,\r\n          { fontWeight: notOpened ? \"bold\" : \"normal\" },\r\n        ]}\r\n      >\r\n        {previewtimestamp ? previewtimestamp : \"\"}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    height: 65,\r\n    borderColor: theme.colors.hazeText,\r\n    borderBottomWidth: 1,\r\n    padding: 7,\r\n    alignItems: \"center\",\r\n  },\r\n  chatLogo: {\r\n    width: 40,\r\n    height: 40,\r\n    margin: 6,\r\n    marginLeft: 2,\r\n    borderRadius: 20,\r\n    backgroundColor: \"#8487A5\",\r\n    justifyContent: \"center\",\r\n  },\r\n  name: {\r\n    fontSize: theme.dimensions.standardFontSize + 4,\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  message: {\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    color: theme.colors.text,\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  timestamp: {\r\n    marginLeft: \"auto\",\r\n    color: theme.colors.text,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View, TextInput } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function SearchBar({ onChange }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Ionicons\r\n        name=\"search\"\r\n        size={24}\r\n        color=\"white\"\r\n        style={{ alignSelf: \"center\" }}\r\n      />\r\n      <TextInput\r\n        style={styles.searchBox}\r\n        onChangeText={onChange}\r\n        placeholder=\"Search\"\r\n        placeholderTextColor=\"white\"\r\n      ></TextInput>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    padding: 10,\r\n    borderRadius: (theme.dimensions.inputHeight + 2) / 2,\r\n    width: \"80%\",\r\n    height: theme.dimensions.inputHeight + 2,\r\n    backgroundColor: theme.colors.primary,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  searchBox: {\r\n    color: \"white\",\r\n    marginLeft: 10,\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n    width: \"80%\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport FormatTime from \"../functions/FormatTime\";\r\n\r\nexport default function Message({ text, timestamp, user, me }) {\r\n  timestamp = FormatTime(timestamp);\r\n\r\n  if (text && text.length < 15 && user && user.length > 5) {\r\n    user = user.substring(0, user.indexOf(\" \"));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.row}>\r\n      <View\r\n        style={[\r\n          styles.messageBox,\r\n          {\r\n            alignSelf: me ? \"flex-end\" : \"flex-start\",\r\n            backgroundColor: me ? theme.colors.primary : theme.colors.secondary,\r\n            textAlign: me ? \"right\" : \"left\",\r\n          },\r\n        ]}\r\n      >\r\n        <View style={styles.userAndTime}>\r\n          <Text style={styles.user} testID=\"user\">\r\n            {user ? user : \"\"}\r\n          </Text>\r\n          <Text style={styles.ts} testID=\"time\">\r\n            {timestamp}{\" \"}\r\n          </Text>\r\n        </View>\r\n        <Text style={[styles.text, { textAlign: \"center\" }]} testID=\"message\">\r\n          {text ? text : \"\"}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    width: \"100%\",\r\n    alignContent: \"flex-start\",\r\n    marginBottom: 5,\r\n  },\r\n  messageBox: {\r\n    borderRadius: theme.dimensions.inputHeight / 2,\r\n    flexDirection: \"column\",\r\n    maxWidth: \"62%\",\r\n    padding: 6,\r\n    marginHorizontal: 4,\r\n  },\r\n  userAndTime: {\r\n    flexDirection: \"row\",\r\n    marginLeft: 4,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  user: {\r\n    color: theme.colors.jet,\r\n    alignSelf: \"flex-start\",\r\n    marginRight: 2,\r\n    fontWeight: \"700\",\r\n    fontSize: theme.dimensions.standardFontSize - 4,\r\n  },\r\n  ts: {\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 2,\r\n    color: theme.colors.jet,\r\n    fontWeight: \"700\",\r\n    fontSize: theme.dimensions.standardFontSize - 4,\r\n  },\r\n  text: {\r\n    width: \"auto\",\r\n    color: theme.colors.text,\r\n    padding: 4,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput, View, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function SendText({ text, setText, send, testID }) {\r\n  return (\r\n    <View\r\n      style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}\r\n      testID={testID}\r\n    >\r\n      <TextInput\r\n        style={styles.textInput}\r\n        placeholder=\"message\"\r\n        placeholderTextColor=\"#404040\"\r\n        onChangeText={setText}\r\n        value={text}\r\n      ></TextInput>\r\n      <TouchableOpacity style={styles.send} onPress={send}>\r\n        <Ionicons name=\"send\" size={20} color={theme.colors.text} />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    height: theme.dimensions.inputHeight,\r\n    width: \"80%\",\r\n    backgroundColor: theme.colors.secondary,\r\n    alignItems: \"center\",\r\n    color: theme.colors.text,\r\n    borderRadius: theme.dimensions.inputHeight / 2,\r\n    padding: 8,\r\n    fontSize: theme.dimensions.standardFontSize + 1,\r\n    paddingLeft: 11,\r\n    marginVertical: 7,\r\n  },\r\n  send: {\r\n    width: theme.dimensions.inputHeight - 1,\r\n    height: theme.dimensions.inputHeight - 1,\r\n    backgroundColor: theme.colors.primary,\r\n    borderRadius: theme.dimensions.inputHeight / 2,\r\n    marginVertical: 7,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View, Image } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport logo from \"../assets/loading.gif\";\r\n\r\nexport default function LoadingScreen() {\r\n  //the logo is a gif of a spinning circle made up of the colours from the theme colour palette\r\n  return (\r\n    <View style={styles.container} testID=\"loading\">\r\n      <Image source={logo} style={styles.img}></Image>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  img: {\r\n    width: 112,\r\n    height: 120,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function Header({ name, onPress }) {\r\n  return (\r\n    <View style={styles.header}>\r\n      <AntDesign name=\"left\" size={24} color=\"white\" onPress={onPress} />\r\n      <Text style={styles.chatName}>{name}</Text>\r\n      <AntDesign name=\"back\" size={24} color={theme.colors.background} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n  chatName: {\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, ScrollView, Text, View } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function MemberList({ members, fsRef, admin }) {\r\n  // helper function to remove member from the list of members\r\n  function deleteMember(member) {\r\n    var newMembers = members.filter((mem) => mem !== member);\r\n    fsRef.update({\r\n      members: newMembers,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.heading}>Members List</Text>\r\n      {members &&\r\n        members.map((mem, i) => (\r\n          <View key={i} style={styles.memberContainer}>\r\n            {mem === admin ? (\r\n              <Text style={styles.adminMember}>{mem}</Text>\r\n            ) : (\r\n              <View style={styles.regularMember}>\r\n                <Text style={styles.member}>{mem}</Text>\r\n                <AntDesign\r\n                  name=\"delete\"\r\n                  size={16}\r\n                  color={theme.colors.hazeText}\r\n                  onPress={() => deleteMember(mem)}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    marginBottom: 15,\r\n  },\r\n  heading: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  memberContainer: {\r\n    borderBottomColor: theme.colors.hazeText,\r\n    borderBottomWidth: 0.5,\r\n    padding: 4,\r\n    marginVertical: 5,\r\n    width: \"100%\",\r\n  },\r\n  regularMember: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  member: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n  adminMember: {\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function TextAlert(props) {\r\n  return <Text style={styles.alert}>{props.text ? props.text : \" \"}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  alert: {\r\n    paddingLeft: 3,\r\n    width: theme.dimensions.authWidth,\r\n    height: 15,\r\n    color: theme.colors.primary,\r\n    fontSize: 12,\r\n    margin: 0,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function ChirpButton(props) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={props.onPress}\r\n      style={[styles.button, { width: props.width }]}\r\n      testID={props.testID ? props.testID : \"button\"}\r\n    >\r\n      <Text style={styles.buttonText}>{props.text ? props.text : \"  \"} </Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: theme.colors.primary,\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 18,\r\n    alignItems: \"center\",\r\n    height: theme.dimensions.buttonHeight,\r\n  },\r\n  buttonText: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\r\n\r\nexport default firebase;\r\n","import firebase from \"./FirebaseInit\";\r\nimport \"firebase/firestore\";\r\n\r\n// set up the firebase using the configurations\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDS6ewZ9HDXhwN8u6qzsXmsijtv-5GFcrM\",\r\n  authDomain: \"chirp-77b9d.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://chirp-77b9d-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"chirp-77b9d\",\r\n  storageBucket: \"chirp-77b9d.appspot.com\",\r\n  messagingSenderId: \"875721758742\",\r\n  appId: \"1:875721758742:web:96ae1de3b28abdf608bd37\",\r\n  measurementId: \"G-S4YZ6D7KW9\",\r\n};\r\n\r\n// initialise the app\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.firestore(app);\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TextInput } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport TextAlert from \"../components/TextAlert\";\r\nimport ChirpButton from \"./ChirpButton\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\n\r\nexport default function AddMember({ currentMembers, fsRef }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [addMemberAlert, setAddMemberAlert] = useState(\"\");\r\n\r\n  const usersRef = firestore.collection(\"users\");\r\n  const query = usersRef.where(\"email\", \"==\", email.toLowerCase());\r\n  const [user] = useCollectionData(query, { idField: \"userId\" });\r\n\r\n  function addMember() {\r\n    setAddMemberAlert(\"\");\r\n\r\n    if (!validateEmail(email)) {\r\n      setAddMemberAlert(\"Email address is invalid\");\r\n      return;\r\n    }\r\n\r\n    if (user && user.length > 0) {\r\n      let userEmail = user[0].email;\r\n      if (!currentMembers.includes(userEmail)) {\r\n        // if the list of current members doesn't already include the email...\r\n        let newMembers = currentMembers;\r\n        newMembers.push(userEmail);\r\n        // add the email to the list and update the firestore document\r\n        fsRef.update({\r\n          members: newMembers,\r\n        });\r\n        setEmail(\"\");\r\n        setAddMemberAlert(\"Successful\");\r\n      } else {\r\n        setAddMemberAlert(\"User is already a member.\");\r\n      }\r\n    } else {\r\n      setAddMemberAlert(\"No user with that email exists\");\r\n    }\r\n  }\r\n\r\n  // helper function to validate email address structure\r\n  const validateEmail = (e) => {\r\n    // uses regex\r\n    return String(e)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.optionsText}>Add member</Text>\r\n      <View style={styles.addMember}>\r\n        <TextInput\r\n          style={styles.memberTextBox}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor={theme.colors.placeholderColor}\r\n          value={email}\r\n          onChangeText={setEmail}\r\n        ></TextInput>\r\n        <ChirpButton\r\n          text=\"Add\"\r\n          onPress={() => addMember()}\r\n          width=\"25%\"\r\n        ></ChirpButton>\r\n      </View>\r\n      <TextAlert text={addMemberAlert}></TextAlert>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n  },\r\n  optionsText: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  addMember: {\r\n    borderRadius: 18,\r\n    borderColor: theme.colors.primary,\r\n    borderWidth: 1,\r\n    flexDirection: \"row\",\r\n    margin: 7,\r\n    width: \"90%\",\r\n    justifyContent: \"space-around\",\r\n    alignSelf: \"center\",\r\n  },\r\n  memberTextBox: {\r\n    width: \"60%\",\r\n    color: \"white\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n    margin: 7,\r\n  },\r\n});\r\n","import firebase from \"./FirebaseInit\";\r\nimport \"firebase/auth\";\r\n\r\nexport default firebase.auth();\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  Alert,\r\n  Platform,\r\n  BackHandler,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport FormatTime from \"../functions/FormatTime\";\r\nimport MemberList from \"../components/MemberList\";\r\nimport AddMember from \"../components/AddMember\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function ChatOptions({\r\n  name,\r\n  id,\r\n  returnToChat,\r\n  chatData,\r\n  returnToMain,\r\n}) {\r\n  const chatRef = firestore.collection(\"chatGroups\").doc(id);\r\n\r\n  BackHandler.addEventListener(\"hardwareBackPress\", function () {\r\n    returnToChat();\r\n    return true;\r\n  });\r\n\r\n  function deleteChat() {\r\n    if (Platform.OS === \"web\") {\r\n      chatRef.delete();\r\n      returnToMain();\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirm Delete\",\r\n        \"Are you sure you want to delete this chat and all data associated with it?\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n            style: \"cancel\",\r\n          },\r\n          {\r\n            text: \"Delete\",\r\n            style: \"destructive\",\r\n            onPress: () => {\r\n              chatRef.delete();\r\n              returnToMain();\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {auth.currentUser.email === chatData.admin ? (\r\n        <View style={styles.header}>\r\n          <AntDesign\r\n            name=\"left\"\r\n            size={24}\r\n            color=\"white\"\r\n            onPress={returnToChat}\r\n          />\r\n          <Text style={styles.chatName}>{name}</Text>\r\n          <AntDesign\r\n            name=\"delete\"\r\n            size={24}\r\n            color={theme.colors.text}\r\n            onPress={deleteChat}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <Header name={name} onPress={returnToChat} />\r\n      )}\r\n      <Text style={styles.chatInfo}>\r\n        {\" \"}\r\n        {chatData.createdAt\r\n          ? \"Created on: \" + FormatTime(chatData.createdAt.seconds)\r\n          : \"\"}\r\n      </Text>\r\n      <AddMember\r\n        currentMembers={chatData.members}\r\n        chatId={id}\r\n        fsRef={chatRef}\r\n      />\r\n      <MemberList\r\n        members={chatData.members}\r\n        fsRef={chatRef}\r\n        admin={chatData.admin}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n  chatName: {\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n  chatInfo: {\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize - 2,\r\n    alignSelf: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  deleteButton: {\r\n    marginTop: 30,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  ScrollView,\r\n  Text,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  BackHandler,\r\n} from \"react-native\";\r\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport Message from \"./Message\";\r\nimport SendText from \"./SendText\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport ChatOptions from \"./ChatOptions\";\r\n\r\nimport {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\n\r\nimport firebase from \"../config/FirebaseInit\";\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function ChirpChat({ name, id, onBackPress }) {\r\n  const [optionsOpen, setOptionsOpen] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const scrollViewRef = useRef();\r\n\r\n  // here we add event listener for a back press event.\r\n  // If the event is triggered, we call the function onBackPress.\r\n  BackHandler.addEventListener(\"hardwareBackPress\", function () {\r\n    onBackPress();\r\n    return true;\r\n  });\r\n\r\n  const currentUser = auth.currentUser;\r\n  var uid, email;\r\n  if (currentUser) {\r\n    uid = currentUser.uid;\r\n    email = currentUser.email;\r\n  }\r\n  const userRef = firestore.collection(\"users\").doc(uid);\r\n  // similar to useCollectionData hook, this only reads in the single document. works like real time db\r\n  const [user] = useDocumentData(userRef);\r\n\r\n  const chatRef = firestore.collection(\"chatGroups\").doc(id);\r\n  const [chat] = useDocumentData(chatRef);\r\n\r\n  const messagesRef = chatRef.collection(\"messages\");\r\n  const query = messagesRef.orderBy(\"createdAt\").limit(50);\r\n  const [msgs, loading] = useCollectionData(query, { idField: \"msgId\" });\r\n\r\n  async function sendText() {\r\n    if (text.length > 0) {\r\n      // once we have a text with at least one character,\r\n      // we add the message to the messages collection that exists within the chat document\r\n      await messagesRef.add({\r\n        text: text ? text : \"\",\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        email,\r\n        user: user ? user.name : \"\",\r\n      });\r\n\r\n      // here we update some fields on the chats document\r\n      // every member of the chat has not yet seen this message\r\n      // we put a snippet of the message as the lastMessage preview and update the timestamp\r\n      firestore\r\n        .collection(\"chatGroups\")\r\n        .doc(id)\r\n        .update({\r\n          membersUnseen: chat.members,\r\n          lastMessage: text.length < 30 ? text : text.slice(0, 30) + \"...\",\r\n          lastMessageTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n      // clear the text box\r\n      setText(\"\");\r\n    }\r\n  }\r\n\r\n  function openOptions() {\r\n    setOptionsOpen(true);\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  } else if (optionsOpen) {\r\n    return (\r\n      <ChatOptions\r\n        name={name}\r\n        id={id}\r\n        chatData={chat}\r\n        returnToChat={() => setOptionsOpen(false)}\r\n        returnToMain={onBackPress}\r\n      ></ChatOptions>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <AntDesign\r\n            name=\"left\"\r\n            size={24}\r\n            color=\"white\"\r\n            testID=\"backButton\"\r\n            onPress={onBackPress}\r\n          />\r\n          <Text style={styles.chatName} testID=\"chatName\">\r\n            {name}\r\n          </Text>\r\n          <SimpleLineIcons\r\n            name=\"options-vertical\"\r\n            size={22}\r\n            color=\"white\"\r\n            onPress={openOptions}\r\n          />\r\n        </View>\r\n        <ScrollView\r\n          style={styles.messagesBox}\r\n          ref={scrollViewRef}\r\n          onContentSizeChange={() =>\r\n            scrollViewRef.current.scrollToEnd({ animated: true })\r\n          }\r\n        >\r\n          {msgs && msgs.length > 0 ? (\r\n            msgs.map((msg) => (\r\n              <Message\r\n                key={msg.msgId}\r\n                text={msg.text}\r\n                timestamp={msg.createdAt ? msg.createdAt.seconds : \"  \"}\r\n                me={msg.uid == uid}\r\n                user={msg.user}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Text style={styles.noMessagesText} testID=\"noChatsHelpText\">\r\n              Be the first to send a message! {\"\\n\\n\\n\\n\"} Click on the ⋮ in the\r\n              top right corner to open options and add other members\r\n            </Text>\r\n          )}\r\n        </ScrollView>\r\n        <KeyboardAvoidingView\r\n          style={styles.bottomBar}\r\n          behavior=\"padding\"\r\n          keyboardVerticalOffset={-150}\r\n        >\r\n          <SendText\r\n            text={text}\r\n            setText={setText}\r\n            send={sendText}\r\n            testID=\"sendTextBox\"\r\n          ></SendText>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  messagesBox: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  bottomBar: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n  },\r\n  chatName: {\r\n    color: theme.colors.text,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n  noMessagesText: {\r\n    textAlign: \"center\",\r\n    width: \"80%\",\r\n    alignSelf: \"center\",\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function CreateButton(props) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={props.onPress}\r\n      style={[\r\n        styles.button,\r\n        props.size\r\n          ? {\r\n              borderRadius: props.size / 2,\r\n              width: props.size,\r\n              height: props.size,\r\n            }\r\n          : \"\",\r\n      ]}\r\n    >\r\n      <MaterialIcons name=\"create\" size={24} color=\"white\" />\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: theme.colors.primary,\r\n    borderRadius: (theme.dimensions.inputHeight + 2) / 2,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: theme.dimensions.inputHeight + 2,\r\n    width: theme.dimensions.inputHeight + 2,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function ChirpTextBox({\r\n  onChangeText,\r\n  value,\r\n  placeholder,\r\n  password,\r\n  allowMultiline,\r\n  smallVersion,\r\n  testID,\r\n}) {\r\n  return (\r\n    <TextInput\r\n      style={[\r\n        styles.textBox,\r\n        {\r\n          padding: smallVersion ? 3 : 5,\r\n          fontSize: smallVersion ? 14 : 15,\r\n          marginTop: smallVersion ? 5 : 7,\r\n          marginBottom: smallVersion ? 3 : 4,\r\n        },\r\n      ]}\r\n      value={value}\r\n      onChangeText={onChangeText ? onChangeText : null}\r\n      secureTextEntry={password ? true : false}\r\n      selectTextOnFocus={password ? true : false}\r\n      selectionColor={theme.colors.primary}\r\n      multiline={allowMultiline ? allowMultiline : false}\r\n      blurOnSubmit={true}\r\n      placeholder={placeholder ? placeholder : \"\"}\r\n      placeholderTextColor={theme.colors.placeholderColor}\r\n      testID={testID ? testID : \"chirpTextBox\"}\r\n    ></TextInput>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textBox: {\r\n    width: \"82%\",\r\n    color: theme.colors.text,\r\n    borderBottomColor: theme.colors.text,\r\n    borderBottomWidth: 1,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport ChirpTextBox from \"../components/ChirpTextBox\";\r\nimport TextAlert from \"../components/TextAlert\";\r\nimport Header from \"../components/Header\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\nimport firebase from \"../config/FirebaseInit\";\r\n\r\nexport default function CreateChat({ onBackPress }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n\r\n  function createChat() {\r\n    if (name.length < 1) {\r\n      setNameError(\"Name is too short\");\r\n    } else if (name.length > 25) {\r\n      setNameError(\"Name is too long\");\r\n    } else {\r\n      setNameError(\"\");\r\n      const chatsRef = firestore.collection(\"chatGroups\");\r\n      chatsRef.doc().set({\r\n        name: name,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        members: [auth.currentUser.email],\r\n        admin: auth.currentUser.email,\r\n        membersUnseen: [],\r\n        lastMessage: \"\",\r\n        lastMessageTimestamp: null,\r\n      });\r\n      setName(\"\");\r\n      onBackPress();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header name=\"Create Chat\" onPress={onBackPress} />\r\n      <View style={styles.chatInfo}>\r\n        <ChirpTextBox\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n          testID=\"nameBox\"\r\n        ></ChirpTextBox>\r\n        <TextAlert text={nameError}></TextAlert>\r\n      </View>\r\n      <ChirpButton\r\n        onPress={createChat}\r\n        width=\"70%\"\r\n        text=\"Create Chat\"\r\n        testID=\"createChatButton\"\r\n      ></ChirpButton>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    marginVertical: 15,\r\n  },\r\n  back: {\r\n    marginLeft: 10,\r\n  },\r\n  chatName: {\r\n    color: theme.colors.text,\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    marginRight: 25,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n  chatInfo: {\r\n    height: \"60%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, SafeAreaView, ScrollView, Text } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChatPreview from \"./ChatPreview\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport ChirpChat from \"./ChirpChat\";\r\nimport CreateButton from \"../components/CreateButton\";\r\nimport CreateChat from \"./CreateChat\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function ChirpGroups() {\r\n  // we use useStates so that whenever a state (e.g. email) changes, the componenent re-renders\r\n  const [chatClicked, setChatClicked] = useState(false);\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n  const [chatId, setChatId] = useState();\r\n  const [chatName, setChatName] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //get the current user information as an object from the firebase auth package\r\n  const currentUser = auth.currentUser;\r\n  var email = \"\";\r\n\r\n  if (currentUser) {\r\n    email = currentUser.email;\r\n  }\r\n\r\n  // make a reference to the chatGroups firestore collection\r\n  const chatsRef = firestore.collection(\"chatGroups\");\r\n  // make a query on the ref for chats where the members array contains current user's email address\r\n  const query = chatsRef.where(\"members\", \"array-contains\", email);\r\n  // now get the groups that the query returns\r\n  // useCollectionData is a hook that imitates a real-time database set up\r\n  // each time the underlying data changes in the database, the groups object will be updated\r\n  // and the component will re-render as a result\r\n  const [groups] = useCollectionData(query, { idField: \"chatId\" });\r\n\r\n  let chatGroups;\r\n\r\n  // here we sort the groups based on the last message timestamp field that exists in each chat document\r\n  // the group with the most recent message will be first\r\n  if (groups) {\r\n    groups.sort(function (a, b) {\r\n      return b.lastMessageTimestamp - a.lastMessageTimestamp;\r\n    });\r\n    chatGroups = groups;\r\n  }\r\n\r\n  // this function changes state values so that instead of the groups being returned\r\n  // a single chat is returned. The chat id is set also so the \"ChirpChat.js\" component\r\n  // knows which chat information to retrieve from the firestore database\r\n  function goToChat(id, name) {\r\n    setChatId(id);\r\n    setChatClicked(true);\r\n    setChatName(name);\r\n\r\n    // this function sets the chat (given by \"id\") as \"read\" by the current user. See below\r\n    setChatOpenedByUser(id);\r\n  }\r\n\r\n  // setting \"createClicked\" to true will make the conditional statement below return the create screen\r\n  function goToCreateChat() {\r\n    setCreateClicked(true);\r\n  }\r\n\r\n  // function that clears the states so that groups are shown again\r\n  function backToGroups() {\r\n    setChatClicked(false);\r\n    setCreateClicked(false);\r\n    setChatId(0);\r\n  }\r\n\r\n  // helper function to remove a given element from an array\r\n  function removeElementFromArray(element, array) {\r\n    const index = array.indexOf(element);\r\n    if (index >= 0) {\r\n      array.splice(index, 1);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  function setChatOpenedByUser(id) {\r\n    var groupIndex = -1;\r\n    // for loop to find the chat by ID\r\n    for (let i = 0; i < groups.length; i++) {\r\n      if (groups[i].chatId == id) {\r\n        groupIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    if (groupIndex == -1) {\r\n      return false;\r\n    }\r\n\r\n    // get the array from groups of members that havent opened the chat since a message was sent in\r\n    let unseen = groups[groupIndex].membersUnseen;\r\n    // use helper method to remove the user from this list\r\n    let updateUnseen = removeElementFromArray(email, unseen);\r\n\r\n    // update the document (given by ID) with the new array (without the current user's email)\r\n    chatsRef.doc(id).update({\r\n      membersUnseen: updateUnseen,\r\n    });\r\n    return true;\r\n  }\r\n\r\n  // here we deal with the search feature.\r\n  if (search.length > 0) {\r\n    // if there is 1 or more characters in the search field\r\n    // filter the groups using our custom filter function\r\n    const matches = groups.filter((group) => {\r\n      // for each group, if its name in lowercase contains the search term at any stage...\r\n      if (group.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        return true;\r\n      }\r\n    });\r\n    chatGroups = matches;\r\n  } else {\r\n    chatGroups = groups;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.outerContainer}>\r\n      {(() => {\r\n        if (chatClicked) {\r\n          return (\r\n            <ChirpChat id={chatId} name={chatName} onBackPress={backToGroups} />\r\n          );\r\n        } else if (createClicked) {\r\n          return <CreateChat onBackPress={backToGroups} />;\r\n        } else {\r\n          return (\r\n            <SafeAreaView style={styles.container}>\r\n              <View style={styles.header}>\r\n                <SearchBar onChange={setSearch}></SearchBar>\r\n                <CreateButton onPress={goToCreateChat}></CreateButton>\r\n              </View>\r\n              <ScrollView style={styles.groupsScroll}>\r\n                {chatGroups && chatGroups.length > 0 ? (\r\n                  chatGroups.map((grp) => (\r\n                    <ChatPreview\r\n                      key={grp.chatId}\r\n                      chatName={grp.name}\r\n                      previewText={grp.lastMessage ? grp.lastMessage : \"\"}\r\n                      previewtimestamp={\r\n                        grp.lastMessageTimestamp\r\n                          ? grp.lastMessageTimestamp.seconds\r\n                          : \"\"\r\n                      }\r\n                      notOpened={grp.membersUnseen.includes(email)}\r\n                      onPress={() => goToChat(grp.chatId, grp.name)}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <Text style={styles.emptyGroupsText} testID=\"noChatsHelpText\">\r\n                    You have not joined any chats yet. {\"\\n\\n\"}Click the create\r\n                    button to make your own chat group!\r\n                  </Text>\r\n                )}\r\n              </ScrollView>\r\n            </SafeAreaView>\r\n          );\r\n        }\r\n      })()}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n  },\r\n  groupsScroll: {\r\n    width: \"100%\",\r\n  },\r\n  outerContainer: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-around\",\r\n    marginVertical: 20,\r\n  },\r\n  emptyGroupsText: {\r\n    fontSize: theme.dimensions.standardFontSize + 5,\r\n    color: theme.colors.hazeText,\r\n    width: \"80%\",\r\n    alignSelf: \"center\",\r\n    paddingTop: 40,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function Statistics() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Statistics</Text>\r\n      <Text style={styles.stat}>Created Todos = 4</Text>\r\n      <Text style={styles.stat}>Messages sent = 4</Text>\r\n      <Text style={styles.stat}>Joined projects = 2</Text>\r\n      <Text style={styles.stat}>Completed Todos = 8</Text>\r\n      <Text style={styles.stat}>Assigned Todos = 10</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"85%\",\r\n    height: \"40%\",\r\n    alignSelf: \"center\",\r\n    borderRadius: 25,\r\n    backgroundColor: theme.colors.jet,\r\n    padding: 5,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"flex-start\",\r\n    shadowColor: \"rgb(15, 15, 12)\",\r\n    shadowOffset: { height: 1.5, width: 1.5 },\r\n    // elevation: 2,\r\n    shadowRadius: 1,\r\n  },\r\n  heading: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n    fontWeight: \"bold\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  stat: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    marginLeft: 4,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport Statistics from \"./Statistics\";\r\n\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport firebase from \"firebase\";\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\n\r\nexport default function ChirpProfile() {\r\n  const { uid, displayName } = auth.currentUser;\r\n  // get the user's google profile photo URL\r\n  var photoURL = auth.currentUser.photoURL;\r\n\r\n  const userRef = firestore.collection(\"users\").doc(uid);\r\n  const [user, loading] = useDocumentData(userRef);\r\n\r\n  // here we check if there exists a \"profileURL\" field in the user document\r\n  // if so, it means that they have uploaded a profile image already\r\n  if (user && user.profileURL) {\r\n    photoURL = user.profileURL;\r\n  }\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    // here we launch the image picker\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    // once an image is picked and placed into result, we handle it\r\n    handleImagePicked(result);\r\n  };\r\n\r\n  const handleImagePicked = async (pickerResult) => {\r\n    try {\r\n      // ensure the picking wasnt cancelled\r\n      if (!pickerResult.cancelled) {\r\n        // upload the image to firebase and return the URL it was uploaded to\r\n        const uploadUrl = await uploadImageAsync(pickerResult.uri);\r\n        setUserProfileURL(uploadUrl);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"Upload failed, sorry :(\");\r\n    }\r\n  };\r\n\r\n  // helper method to update (or add) the profileURL field on the users document on firestore\r\n  const setUserProfileURL = (url) => {\r\n    userRef.update({\r\n      profileURL: url,\r\n    });\r\n  };\r\n\r\n  async function uploadImageAsync(uri) {\r\n    // create a blob with a promise uses XHR\r\n    const blob = await new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.onload = function () {\r\n        resolve(xhr.response);\r\n      };\r\n      xhr.onerror = function (e) {\r\n        console.log(e);\r\n        reject(new TypeError(\"Network request failed\"));\r\n      };\r\n      xhr.responseType = \"blob\";\r\n      xhr.open(\"GET\", uri, true);\r\n      xhr.send(null);\r\n    });\r\n\r\n    // get the file extension, e.g. png, jpg...\r\n    var fileType = uri.substring(uri.indexOf(\"/\") + 1, uri.indexOf(\";\"));\r\n\r\n    var currentTime = Date.now();\r\n\r\n    // create a reference on firebase storage. file name is unique since\r\n    var ref = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(currentTime + \".\" + fileType);\r\n    // put the blob in the new reference\r\n    await ref.put(blob);\r\n\r\n    // return the resuting url\r\n    return ref.getDownloadURL();\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.profileHeader}>\r\n          {/* if photoURL null we show the first letter of the user's name instead */}\r\n          {photoURL ? (\r\n            <Image\r\n              style={styles.profileImage}\r\n              source={{ uri: photoURL }}\r\n            ></Image>\r\n          ) : (\r\n            <View style={styles.profileImage}>\r\n              <Text style={styles.profileText}>\r\n                {user ? user.name.slice(0, 1) : \"F\"}\r\n              </Text>\r\n            </View>\r\n          )}\r\n          <View style={styles.profileInfo}>\r\n            <Text style={styles.displayName}>\r\n              {user ? user.name : displayName}\r\n            </Text>\r\n            <Text style={styles.createdAt}>\r\n              Created at:{\" \"}\r\n              {auth.currentUser.metadata.creationTime.substring(5, 22)}\r\n            </Text>\r\n            <Text style={styles.createdAt}>\r\n              Last Sign In:{\" \"}\r\n              {auth.currentUser.metadata.lastSignInTime.substring(5, 22)}\r\n            </Text>\r\n          </View>\r\n          <ChirpButton\r\n            text=\"Sign out\"\r\n            style={styles.option}\r\n            onPress={() => auth.signOut()}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              paddingLeft: 4,\r\n              paddingBottom: 2,\r\n              color: theme.colors.hazeText,\r\n              borderBottomColor: theme.colors.hazeText,\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n            Options\r\n          </Text>\r\n          <ChirpButton\r\n            style={styles.option}\r\n            text=\"Change Profile Image\"\r\n            onPress={() => pickImage()}\r\n          />\r\n        </View>\r\n        <View style={styles.options}>\r\n          {/* <Text style={styles.option} onPress={() => setEditClicked(true)}>\r\n            Edit profile\r\n          </Text> */}\r\n\r\n          {/* <ChirpSwitch\r\n            text=\"Enable light mode\"\r\n            value={lightMode}\r\n            setValue={setLightMode}\r\n          /> */}\r\n        </View>\r\n        <Statistics />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  profileHeader: {\r\n    flexDirection: \"row\",\r\n    height: 100,\r\n    marginTop: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  profileImage: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 60,\r\n    borderColor: theme.colors.hazeText,\r\n    borderWidth: 0.8,\r\n    justifyContent: \"center\",\r\n  },\r\n  profileText: {\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize + 14,\r\n    textAlign: \"center\",\r\n  },\r\n  displayName: {\r\n    fontSize: theme.dimensions.standardFontSize + 5,\r\n    color: theme.colors.text,\r\n  },\r\n  profileInfo: {\r\n    flexDirection: \"column\",\r\n    margin: 18,\r\n  },\r\n  createdAt: {\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize - 4,\r\n  },\r\n  options: {\r\n    marginTop: 20,\r\n  },\r\n  option: {\r\n    fontSize: theme.dimensions.standardFontSize + 1,\r\n    color: theme.colors.text,\r\n    width: \"100%\",\r\n    padding: 7,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { MaterialCommunityIcons, Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function ProjectPreview({\r\n  projectName,\r\n  nextTodo,\r\n  onPress,\r\n  remaining,\r\n  done,\r\n}) {\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={onPress}>\r\n      <View style={styles.left}>\r\n        <Text\r\n          style={[\r\n            styles.name,\r\n            done\r\n              ? {\r\n                  textDecorationLine: \"line-through\",\r\n                  textDecorationStyle: \"solid\",\r\n                  textDecorationColor: \"white\",\r\n                  fontWeight: \"normal\",\r\n                }\r\n              : {},\r\n          ]}\r\n        >\r\n          {projectName ? projectName : \"\"}\r\n        </Text>\r\n        <Text style={styles.todo}>\r\n          {nextTodo && !done ? \"Todo: \" + nextTodo : \"\"}\r\n        </Text>\r\n      </View>\r\n      {remaining && !done ? (\r\n        <View style={styles.right}>\r\n          <MaterialCommunityIcons name=\"timer-sand\" size={18} color=\"white\" />\r\n          <Text style={styles.remaining}>{remaining}</Text>\r\n        </View>\r\n      ) : (\r\n        <View style={{ paddingRight: 15 }}>\r\n          <Ionicons name=\"checkmark-done\" size={30} color=\"white\" />\r\n        </View>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    height: 60,\r\n    borderRadius: 25,\r\n    backgroundColor: theme.colors.jet,\r\n    padding: 5,\r\n    margin: 10,\r\n    alignSelf: \"center\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    shadowColor: \"rgb(15, 15, 12)\",\r\n    shadowOffset: { height: 1.5, width: 1.5 },\r\n    // elevation: 2,\r\n    shadowRadius: 1,\r\n  },\r\n  left: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  name: {\r\n    fontSize: theme.dimensions.standardFontSize + 3,\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"flex-start\",\r\n    paddingLeft: 10,\r\n  },\r\n  todo: {\r\n    fontSize: theme.dimensions.standardFontSize - 2,\r\n    color: theme.colors.text,\r\n    fontWeight: \"normal\",\r\n    paddingLeft: 10,\r\n  },\r\n  right: {\r\n    flexDirection: \"row\",\r\n  },\r\n  remaining: {\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    paddingLeft: 6,\r\n    paddingRight: 3,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Platform } from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport FormatTime from \"../functions/FormatTime\";\r\n\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport firebase from \"../config/FirebaseInit\";\r\nimport firestore from \"../config/FirestoreInit\";\r\n\r\nexport default function Deadline({ projectId }) {\r\n  const [date, setDate] = useState(new Date());\r\n  const [mode, setMode] = useState(\"date\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const projectRef = firestore.collection(\"projects\").doc(projectId);\r\n  const [project] = useDocumentData(projectRef);\r\n\r\n  var deadlineDate;\r\n  var deadlineTime;\r\n\r\n  if (project) {\r\n    // once project info is loaded, get the formatted date and time\r\n    deadlineDate = FormatTime(project.deadline.seconds, \"date\");\r\n    deadlineTime = FormatTime(project.deadline.seconds, \"time\");\r\n  }\r\n\r\n  // onChange function called when dateTimePicker value changes\r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    setShow(Platform.OS === \"ios\");\r\n    setDate(currentDate);\r\n\r\n    if (selectedDate) {\r\n      setDeadlineDate(currentDate);\r\n    }\r\n  };\r\n\r\n  // function to update the projects document with the new deadline\r\n  // updating the database document causes the ChirpProject component to update as it uses the useDocumentData hook\r\n  function setDeadlineDate(currentDate) {\r\n    projectRef.update({\r\n      deadline: firebase.firestore.Timestamp.fromDate(currentDate),\r\n    });\r\n  }\r\n\r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    if (Platform.OS === \"ios\") {\r\n      showMode(\"datetime\");\r\n    } else {\r\n      showMode(\"date\");\r\n    }\r\n  };\r\n\r\n  const showTimepicker = () => {\r\n    if (Platform.OS === \"ios\") {\r\n      showMode(\"datetime\");\r\n    } else {\r\n      showMode(\"time\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { maxHeight: show ? null : \"20%\" }]}>\r\n      <Text style={styles.heading}>Deadline</Text>\r\n      <View style={styles.body}>\r\n        <Text style={styles.deadline} onPress={showDatepicker}>\r\n          {deadlineDate}\r\n          {\" at \"}\r\n          {deadlineTime}\r\n        </Text>\r\n        <View style={styles.buttons}>\r\n          <ChirpButton width=\"38%\" text=\"Edit date\" onPress={showDatepicker} />\r\n          <ChirpButton width=\"38%\" text=\"Edit time\" onPress={showTimepicker} />\r\n        </View>\r\n      </View>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={date}\r\n            mode={mode}\r\n            style={{\r\n              flex: 1,\r\n              width: \"100%\",\r\n              alignSelf: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  deadline: {\r\n    color: theme.colors.primary,\r\n    fontSize: theme.dimensions.standardFontSize + 5,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttons: {\r\n    justifyContent: \"space-around\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport ChirpTextBox from \"../components/ChirpTextBox\";\r\nimport TextAlert from \"../components/TextAlert\";\r\n\r\nimport firebase from \"../config/FirebaseInit\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function AddTodo({ todosRef, onBackPress, onSubmit }) {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [assignee, setAssignee] = useState(\"\");\r\n  const [creator, setCreator] = useState(\"\");\r\n  const [size, setSize] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n\r\n  async function addTodo() {\r\n    if (description.length < 2) {\r\n      setDescriptionError(\"Description is too short\");\r\n    } else if (description.length > 120) {\r\n      setDescriptionError(\"Description is too long\");\r\n    } else {\r\n      await todosRef.add({\r\n        description: description,\r\n        assignee: assignee,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        author: creator,\r\n        done: false,\r\n        size: size,\r\n      });\r\n      // function passed in as a prop to be executed on submit of a to-do add\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header name=\"Create Todo\" onPress={onBackPress} />\r\n      <View style={styles.todoInfo}>\r\n        <ChirpTextBox\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChangeText={setDescription}\r\n          allowMultiline={true}\r\n          smallVersion={true}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={descriptionError} />\r\n        <ChirpTextBox\r\n          placeholder=\"Assignee\"\r\n          value={assignee}\r\n          smallVersion={true}\r\n          onChangeText={setAssignee}\r\n        ></ChirpTextBox>\r\n        <ChirpTextBox\r\n          placeholder=\"Creator\"\r\n          value={creator}\r\n          onChangeText={setCreator}\r\n          smallVersion={true}\r\n        ></ChirpTextBox>\r\n        <View style={styles.pickerRow}>\r\n          <Text style={styles.pickerHelpText}>Todo size: </Text>\r\n          <View style={{ flex: 1, padding: 0, margin: 0 }}>\r\n            <Picker\r\n              style={{\r\n                color: theme.colors.jet,\r\n                fontSize: theme.dimensions.standardFontSize,\r\n                maxHeight: 80,\r\n              }}\r\n              itemStyle={{\r\n                height: 36,\r\n                color: theme.colors.text,\r\n                fontSize: theme.dimensions.standardFontSize,\r\n              }}\r\n              selectedValue={size}\r\n              onValueChange={(itemValue, itemIndex) => setSize(itemValue)}\r\n              prompt=\"Todo size\"\r\n            >\r\n              <Picker.Item label=\"Select size\" value=\"\" />\r\n              <Picker.Item label=\"S\" value=\"S\" />\r\n              <Picker.Item label=\"M\" value=\"M\" />\r\n              <Picker.Item label=\"L\" value=\"L\" />\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <ChirpButton onPress={addTodo} width=\"70%\" text=\"Add Todo\"></ChirpButton>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    width: \"100%\",\r\n    marginBottom: 2,\r\n    marginTop: 0,\r\n    borderBottomColor: theme.colors.jet,\r\n    borderBottomWidth: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    marginVertical: 10,\r\n  },\r\n  todoName: {\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n  todoInfo: {\r\n    // height: \"50%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  pickerRow: {\r\n    flexDirection: \"row\",\r\n    alignSelf: \"center\",\r\n    width: \"75%\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: 5,\r\n  },\r\n  pickerHelpText: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  ScrollView,\r\n  Text,\r\n  View,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { AntDesign, Entypo, MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport CreateButton from \"../components/CreateButton\";\r\nimport AddTodo from \"./AddTodo\";\r\n\r\nexport default function TodoList({ todos, todosRef, userRef }) {\r\n  const [createTodo, setCreateTodo] = useState(false);\r\n\r\n  // delete todo function with logic for which platform we are using\r\n  function deleteTodo(todoId) {\r\n    if (Platform.OS === \"web\") {\r\n      todosRef.doc(todoId).delete();\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirm Delete\",\r\n        \"Are you sure you want to delete this todo and all data associated with it?\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n            style: \"cancel\",\r\n          },\r\n          {\r\n            text: \"Delete\",\r\n            style: \"destructive\",\r\n            onPress: () => {\r\n              todosRef.doc(todoId).delete();\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  }\r\n\r\n  function pressDone(todoId, newValue) {\r\n    todosRef.doc(todoId).update({\r\n      done: newValue,\r\n    });\r\n  }\r\n\r\n  if (createTodo) {\r\n    return (\r\n      <AddTodo\r\n        todosRef={todosRef}\r\n        onBackPress={() => setCreateTodo(false)}\r\n        onSubmit={() => setCreateTodo(false)}\r\n        userRef={userRef}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View style={styles.blankHeading} />\r\n        <Text style={styles.heading}>Todo List</Text>\r\n        <CreateButton onPress={setCreateTodo} size={40} />\r\n      </View>\r\n      {todos && todos.length > 0 ? (\r\n        todos.map((todo, i) => (\r\n          <View key={i} style={styles.todo}>\r\n            <View style={styles.topSection}>\r\n              <Text style={styles.description}>\r\n                {todo.description ? todo.description : \"\"}\r\n              </Text>\r\n              {todo.done ? (\r\n                <MaterialIcons\r\n                  name=\"done-outline\"\r\n                  size={20}\r\n                  color={theme.colors.hazeText}\r\n                  onPress={() => pressDone(todo.todoId, false)}\r\n                />\r\n              ) : (\r\n                <Entypo\r\n                  name=\"circle-with-cross\"\r\n                  size={19}\r\n                  color={theme.colors.hazeText}\r\n                  onPress={() => pressDone(todo.todoId, true)}\r\n                />\r\n              )}\r\n            </View>\r\n            <View style={styles.bottomSection}>\r\n              <Text style={styles.info}>\r\n                {todo.assignee ? \"Assignee: \" + todo.assignee : \"\"}\r\n              </Text>\r\n              <Text style={styles.info}>\r\n                {todo.size ? \"Size: \" + todo.size : \"\"}\r\n              </Text>\r\n              <Text style={styles.info}>\r\n                {todo.author ? \"Creator: \" + todo.author : \"\"}\r\n              </Text>\r\n\r\n              <AntDesign\r\n                name=\"delete\"\r\n                size={20}\r\n                color={theme.colors.hazeText}\r\n                onPress={() => deleteTodo(todo.todoId)}\r\n              />\r\n            </View>\r\n          </View>\r\n        ))\r\n      ) : (\r\n        <Text style={styles.noMessagesText}>\r\n          {\"\\n\\n\\n\\n\"} Click on the ✏️ to start making your first todo!\r\n        </Text>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n    marginBottom: 15,\r\n    marginTop: 20,\r\n    borderBottomColor: theme.colors.jet,\r\n    borderBottomWidth: 1,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    width: \"90%\",\r\n    alignContent: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n  blankHeading: {\r\n    width: 50,\r\n  },\r\n  heading: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    marginTop: 4,\r\n  },\r\n  todo: {\r\n    borderBottomColor: theme.colors.text,\r\n    borderBottomWidth: 0.5,\r\n    padding: 4,\r\n    marginVertical: 5,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  description: {\r\n    maxWidth: \"92%\",\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize + 1,\r\n  },\r\n  topSection: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 3,\r\n  },\r\n  bottomSection: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  info: {\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize - 1,\r\n    minWidth: \"20%\",\r\n  },\r\n  noMessagesText: {\r\n    textAlign: \"center\",\r\n    width: \"70%\",\r\n    alignSelf: \"center\",\r\n    color: theme.colors.hazeText,\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Modal, Alert, Platform } from \"react-native\";\r\nimport { AntDesign, Entypo, MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport MemberList from \"../components/MemberList\";\r\nimport Deadline from \"./Deadline\";\r\nimport TodoList from \"./TodoList\";\r\nimport AddMember from \"../components/AddMember\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\n\r\nimport {\r\n  useDocumentData,\r\n  useCollectionData,\r\n} from \"react-firebase-hooks/firestore\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function ChirpProject({ name, onBackPress, projectId }) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const projectRef = firestore.collection(\"projects\").doc(projectId);\r\n  const [project, loading] = useDocumentData(projectRef);\r\n\r\n  function deleteProject() {\r\n    // the React Native Alert doesnt work on browsers\r\n    if (Platform.OS === \"web\") {\r\n      projectRef.delete();\r\n      onBackPress();\r\n    } else {\r\n      Alert.alert(\r\n        \"Confirm Delete\",\r\n        \"Are you sure you want to delete this project and all data associated with it?\",\r\n        [\r\n          {\r\n            text: \"Cancel\",\r\n            style: \"cancel\",\r\n          },\r\n          {\r\n            text: \"Delete\",\r\n            style: \"destructive\",\r\n            onPress: () => {\r\n              projectRef.delete();\r\n              onBackPress();\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    }\r\n  }\r\n\r\n  function pressDone(newValue) {\r\n    projectRef.update({\r\n      done: newValue,\r\n    });\r\n  }\r\n\r\n  const userRef = firestore.collection(\"users\").doc(auth.currentUser.uid);\r\n\r\n  const todosRef = projectRef.collection(\"todos\");\r\n  const query = todosRef.orderBy(\"done\", \"asc\").limit(50);\r\n  const [todos] = useCollectionData(query, { idField: \"todoId\" });\r\n\r\n  // once todos are loaded, sort them with most recent created first\r\n  if (todos) {\r\n    todos.sort(function (a, b) {\r\n      if (a.done) return 1;\r\n      return b.createdAt - a.createdAt;\r\n    });\r\n\r\n    // if there is one or more todos\r\n    if (todos[0]) {\r\n      // and the project's \"nextTodo\" field doesn't match the first todos description\r\n      if (project.nextTodo !== todos[0].description) {\r\n        // then we update the projects \"nextTodo\" to be the newest todo\r\n        projectRef.update({\r\n          nextTodo: todos[0].description,\r\n        });\r\n      }\r\n    } else {\r\n      // if there is no more todos then put nextTodo to empty\r\n      projectRef.update({\r\n        nextTodo: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <AntDesign\r\n            style={styles.back}\r\n            name=\"left\"\r\n            size={24}\r\n            color=\"white\"\r\n            onPress={onBackPress}\r\n          />\r\n          <Text style={styles.projectName}>{name}</Text>\r\n          <View style={styles.headerButtons}>\r\n            {project.done ? (\r\n              <MaterialIcons\r\n                name=\"done-outline\"\r\n                style={{ marginRight: 5 }}\r\n                size={24}\r\n                color={theme.colors.text}\r\n                onPress={() => pressDone(false)}\r\n              />\r\n            ) : (\r\n              <Entypo\r\n                name=\"circle-with-cross\"\r\n                style={{ marginRight: 5 }}\r\n                size={24}\r\n                color={theme.colors.text}\r\n                onPress={() => pressDone(true)}\r\n              />\r\n            )}\r\n            {auth.currentUser.email === project.admin ? (\r\n              <AntDesign\r\n                name=\"delete\"\r\n                size={24}\r\n                color={theme.colors.text}\r\n                onPress={deleteProject}\r\n              />\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n        <View style={styles.project}>\r\n          <Text style={styles.description}>\r\n            {project.description ? project.description : \"\"}\r\n          </Text>\r\n          <ChirpButton\r\n            text=\"Show Members\"\r\n            onPress={() => setModalVisible(true)}\r\n            width=\"50%\"\r\n          ></ChirpButton>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => setModalVisible(!modalVisible)}\r\n          >\r\n            <View style={styles.modalView}>\r\n              <MemberList\r\n                members={project.members}\r\n                fsRef={projectRef}\r\n                admin={project.admin}\r\n              />\r\n              <AddMember\r\n                currentMembers={project.members}\r\n                projectId={projectId}\r\n                fsRef={projectRef}\r\n              />\r\n              <ChirpButton\r\n                text=\"Close\"\r\n                width=\"60%\"\r\n                onPress={() => setModalVisible(!modalVisible)}\r\n              ></ChirpButton>\r\n            </View>\r\n          </Modal>\r\n          <TodoList todos={todos} todosRef={todosRef} userRef={userRef} />\r\n          <Deadline projectId={projectId} />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"90%\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  back: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  projectName: {\r\n    color: theme.colors.text,\r\n    textAlign: \"center\",\r\n    alignSelf: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 3,\r\n    paddingLeft: 5,\r\n  },\r\n  headerButtons: {\r\n    flexDirection: \"row\",\r\n  },\r\n  project: {\r\n    height: \"90%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  description: {\r\n    color: theme.colors.hazeText,\r\n    textAlign: \"center\",\r\n    width: \"90%\",\r\n    marginBottom: 5,\r\n  },\r\n  modalView: {\r\n    height: \"60%\",\r\n    backgroundColor: theme.colors.background,\r\n    margin: 20,\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, Switch, StyleSheet } from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function ChirpSwitch({ text, value, setValue }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{text ? text : \"\"}</Text>\r\n      <Switch\r\n        style={{ marginLeft: 5 }}\r\n        trackColor={{ false: \"#767577\", true: \"#9c5a60\" }}\r\n        thumbColor={value ? \"rgb(193, 73, 83)\" : \"#767577\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={setValue}\r\n        value={value}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    margin: 5,\r\n    padding: 2,\r\n  },\r\n  text: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport ChirpTextBox from \"../components/ChirpTextBox\";\r\nimport TextAlert from \"../components/TextAlert\";\r\nimport Deadline from \"./Deadline\";\r\nimport ChirpSwitch from \"../components/ChirpSwitch\";\r\n\r\nimport firebase from \"../config/FirebaseInit\";\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function CreateProject({ onBackPress }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [createChat, setCreateChat] = useState(false);\r\n  const [projectId, setProjectId] = useState(\"\");\r\n\r\n  async function createProject() {\r\n    if (name.length < 2) {\r\n      setNameError(\"Name is too short\");\r\n    } else if (name.length > 25) {\r\n      setNameError(\"Name is too long\");\r\n    } else {\r\n      setNameError(\"\");\r\n      const { id } = await firestore.collection(\"projects\").add({\r\n        name: name,\r\n        description: description,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        deadline: firebase.firestore.FieldValue.serverTimestamp(),\r\n        members: [auth.currentUser.email],\r\n        admin: auth.currentUser.email,\r\n        done: false,\r\n        nextTodo: \"\",\r\n      });\r\n      setProjectId(id);\r\n\r\n      // if the createChat button is enabled, create a chat with the same name\r\n      // and add the current user as a member\r\n      if (createChat) {\r\n        await firestore.collection(\"chatGroups\").add({\r\n          name: name,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          members: [auth.currentUser.email],\r\n          admin: auth.currentUser.email,\r\n          membersUnseen: [],\r\n          lastMessage: \"\",\r\n          lastMessageTimestamp: null,\r\n        });\r\n      }\r\n      setName(\"\");\r\n    }\r\n  }\r\n\r\n  if (projectId) {\r\n    return (\r\n      <View style={styles.deadlineContainer}>\r\n        <Deadline projectId={projectId} />\r\n        <ChirpButton\r\n          onPress={onBackPress}\r\n          width=\"70%\"\r\n          text=\"Set Deadline\"\r\n        ></ChirpButton>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header name=\"Create Project\" onPress={onBackPress} />\r\n      <View style={styles.projectInfo}>\r\n        <ChirpTextBox\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={nameError} />\r\n        <ChirpTextBox\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          allowMultiline={true}\r\n          onChangeText={setDescription}\r\n        ></ChirpTextBox>\r\n        <ChirpSwitch\r\n          style={styles.createChat}\r\n          text=\"Create chat group\"\r\n          value={createChat}\r\n          setValue={() => {\r\n            setCreateChat(!createChat);\r\n          }}\r\n        />\r\n      </View>\r\n      <ChirpButton\r\n        onPress={createProject}\r\n        width=\"70%\"\r\n        text=\"Create Project\"\r\n      ></ChirpButton>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  deadlineContainer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    marginVertical: 15,\r\n  },\r\n  back: {\r\n    marginLeft: 10,\r\n  },\r\n  projectName: {\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n  projectInfo: {\r\n    height: \"60%\",\r\n    width: \"90%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  createChat: {\r\n    marginTop: 10,\r\n    width: \"100%\",\r\n  },\r\n  createChatText: {\r\n    color: theme.colors.text,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n  },\r\n});\r\n","// function calculates the time between a given timestamp and the current timestamp\r\nexport default function GetRemaining(timestamp) {\r\n  if (!timestamp) {\r\n    return \"\";\r\n  }\r\n  var today = Math.floor(new Date().getTime() / 1000);\r\n  var secondsDifference = timestamp.seconds - today;\r\n  var daysDifference = secondsDifference / (3600 * 24);\r\n  var numDays = Math.floor(daysDifference);\r\n\r\n  var numMinutes = Math.floor(secondsDifference / 60);\r\n\r\n  if (numDays > 0) {\r\n    // if its a day or more away, we return the number of days\r\n    var dayString;\r\n    dayString = numDays === 1 ? \" day \" : \" days \";\r\n    return numDays + dayString;\r\n  } else if (numMinutes > 59) {\r\n    // if its an hour or more away we return the number of hours\r\n    return Math.floor(numMinutes / 60) + \" hours\";\r\n  } else if (numMinutes > 0) {\r\n    // if its less than an hour away we return the number of minutes\r\n    return numMinutes + \" minutes\";\r\n  }\r\n  // if it is due before the current time, we return overdue\r\n  return \"Overdue\";\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Text,\r\n  BackHandler,\r\n} from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport CreateButton from \"../components/CreateButton\";\r\nimport ProjectPreview from \"./ProjectPreview\";\r\nimport ChirpProject from \"./ChirpProject\";\r\nimport CreateProject from \"./CreateProject\";\r\nimport GetRemaining from \"../functions/GetRemaining\";\r\n\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function ChirpProjects() {\r\n  const [projectClicked, setProjectClicked] = useState(false);\r\n  const [createClicked, setCreateClicked] = useState(false);\r\n  const [projectID, setProjectID] = useState(\"\");\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  BackHandler.addEventListener(\"hardwareBackPress\", function () {\r\n    backToList();\r\n    return true;\r\n  });\r\n\r\n  const { email } = auth.currentUser;\r\n  const projectsRef = firestore.collection(\"projects\");\r\n  const query = projectsRef.where(\"members\", \"array-contains\", email);\r\n  const [projects] = useCollectionData(query, { idField: \"projectId\" });\r\n\r\n  if (projects) {\r\n    // sort projects list by how soon the deadline is, sooner the deadline the higher on the list\r\n    // if a project is done, it goes to the bottom of the list\r\n    projects.sort(function (a, b) {\r\n      if (a.done || b.done) return 1;\r\n      var x = a.deadline ? a.deadline.seconds : 0;\r\n      var y = b.deadline ? b.deadline.seconds : 0;\r\n      return x - y;\r\n    });\r\n  }\r\n\r\n  function goToProject(id, name) {\r\n    setProjectID(id);\r\n    setProjectClicked(true);\r\n    setProjectName(name);\r\n  }\r\n\r\n  function goToCreateProject() {\r\n    setCreateClicked(true);\r\n  }\r\n\r\n  function backToList() {\r\n    setProjectClicked(false);\r\n    setCreateClicked(false);\r\n    setProjectID(0);\r\n  }\r\n\r\n  function spliceTodo(todo) {\r\n    if (todo.length > 28) {\r\n      return todo.substring(0, 28) + \"...\";\r\n    } else return todo;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.outerContainer}>\r\n      {(() => {\r\n        if (projectClicked) {\r\n          return (\r\n            <ChirpProject\r\n              name={projectName}\r\n              onBackPress={backToList}\r\n              projectId={projectID}\r\n            />\r\n          );\r\n        } else if (createClicked) {\r\n          return <CreateProject onBackPress={backToList}></CreateProject>;\r\n        } else {\r\n          return (\r\n            <SafeAreaView style={styles.container}>\r\n              <View style={styles.header}>\r\n                <Text style={styles.headerText}>Projects</Text>\r\n              </View>\r\n              <ScrollView style={styles.projectScroll}>\r\n                {projects && projects.length > 0 ? (\r\n                  projects.map((proj) => (\r\n                    <ProjectPreview\r\n                      key={proj.projectId}\r\n                      projectName={proj.name}\r\n                      nextTodo={proj.nextTodo ? spliceTodo(proj.nextTodo) : \"\"}\r\n                      remaining={GetRemaining(proj.deadline)}\r\n                      done={proj.done ? proj.done : false}\r\n                      onPress={() => goToProject(proj.projectId, proj.name)}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <Text style={styles.emptyGroupsText}>\r\n                    You aren't a member of any projects yet {\"\\n\\n\"}Click the\r\n                    create button to make your own!\r\n                  </Text>\r\n                )}\r\n              </ScrollView>\r\n              <View style={styles.footer}>\r\n                <CreateButton onPress={goToCreateProject}></CreateButton>\r\n              </View>\r\n            </SafeAreaView>\r\n          );\r\n        }\r\n      })()}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  header: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n    marginBottom: 50,\r\n  },\r\n  headerText: {\r\n    color: theme.colors.text,\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.dimensions.standardFontSize + 2,\r\n  },\r\n  projectScroll: {\r\n    flex: 1,\r\n  },\r\n  footer: {\r\n    alignItems: \"flex-end\",\r\n    margin: 15,\r\n  },\r\n  emptyGroupsText: {\r\n    fontSize: theme.dimensions.standardFontSize + 4,\r\n    color: theme.colors.hazeText,\r\n    width: \"85%\",\r\n    alignSelf: \"center\",\r\n    paddingTop: 40,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\r\nimport {\r\n  Ionicons,\r\n  FontAwesome5,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\n\r\nimport ChirpGroups from \"./chats/ChirpGroups\";\r\nimport { theme } from \"./assets/Theme\";\r\nimport ChirpProfile from \"./profile/ChirpProfile\";\r\nimport ChirpProjects from \"./projects/ChirpProjects\";\r\n\r\nconst bottomTabNavigator = createBottomTabNavigator(\r\n  {\r\n    // specifying the chat tab and icon to display (changes when tab is active)\r\n    Chat: {\r\n      screen: ChirpGroups,\r\n      navigationOptions: {\r\n        tabBarIcon: ({ focused }) => (\r\n          <Ionicons\r\n            name={focused ? \"ios-chatbubble-sharp\" : \"ios-chatbubble-outline\"}\r\n            size={focused ? 27 : 24}\r\n            color=\"white\"\r\n          />\r\n        ),\r\n      },\r\n    },\r\n    Projects: {\r\n      screen: ChirpProjects,\r\n      navigationOptions: {\r\n        tabBarIcon: ({ focused }) => (\r\n          <MaterialCommunityIcons\r\n            name={focused ? \"briefcase-clock\" : \"briefcase-clock-outline\"}\r\n            size={focused ? 27 : 24}\r\n            color=\"white\"\r\n          />\r\n        ),\r\n      },\r\n    },\r\n    Profile: {\r\n      screen: ChirpProfile,\r\n      navigationOptions: {\r\n        tabBarIcon: ({ focused }) => (\r\n          <FontAwesome5\r\n            name={focused ? \"user-alt\" : \"user\"}\r\n            size={focused ? 27 : 24}\r\n            color=\"white\"\r\n          />\r\n        ),\r\n        title: \"Profile\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    // configuration for the navigator\r\n    initialRouteName: \"Projects\",\r\n    tabBarOptions: {\r\n      activeTintColor: theme.colors.hazeText,\r\n      labelStyle: {\r\n        fontSize: 10,\r\n      },\r\n      style: {\r\n        backgroundColor: theme.colors.background,\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\n// here we create the app container to wrap the root navigator\r\nconst AppContainer = createAppContainer(bottomTabNavigator);\r\n\r\nexport default AppContainer;\r\n","import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity, Text, Image } from \"react-native\";\r\n\r\nimport googleLogo from \"../assets/google-logo.png\";\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function AuthProviderButton(props) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={props.onPress}\r\n      style={styles.button}\r\n      testID={props.testID ? props.testID : \"button\"}\r\n    >\r\n      <Image\r\n        style={styles.buttonLogo}\r\n        source={props.type == \"google\" ? googleLogo : \"\"}\r\n      ></Image>\r\n      <Text style={styles.buttonText}>{props.text ? props.text : \"  \"} </Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    width: theme.dimensions.authButtonWidth,\r\n    paddingTop: 7,\r\n    paddingBottom: 7,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    margin: 8,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 18,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    marginLeft: 5,\r\n    color: \"black\",\r\n    fontWeight: \"600\",\r\n  },\r\n  buttonLogo: {\r\n    height: 19,\r\n    width: 19,\r\n    margin: 3,\r\n  },\r\n});\r\n","import firebase from \"../config/FirebaseInit\";\r\nimport firestore from \"../config/FirestoreInit\";\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\n// function adds user to the firestore users collection\r\n// if a name is passed in it uses that, otherwise it fetches the name from the auth current user object\r\nasync function AddUserToDB(name) {\r\n  const usersRef = firestore.collection(\"users\");\r\n  await usersRef.doc(auth.currentUser.uid).set({\r\n    email: auth.currentUser.email,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    name: name ? name : auth.currentUser.displayName,\r\n  });\r\n}\r\n\r\nexport default AddUserToDB;\r\n","import { Platform } from \"react-native\";\r\nimport * as GoogleAuthentication from \"expo-google-app-auth\";\r\n\r\nimport AddUserToDB from \"../functions/AddUserToDB\";\r\n\r\nimport firebase from \"../config/FirebaseInit\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function GoogleSignIn() {\r\n  // if its on a browser we use a different library than on an Android or iOS\r\n  if (Platform.OS === \"web\") {\r\n    // first we construct the google auth provider\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    // add google oauth scope to provider to include profile accounts\r\n    provider.addScope(\"profile\");\r\n\r\n    // next we open a pop up for user to choose which google account to sign in with\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        // if user successfully signs in, add this user to the database and return true.\r\n        AddUserToDB();\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  } else if (Platform.OS === \"android\" || \"ios\") {\r\n    // here we provide the GoogleAuthentication module with the client ids for iOS and Android\r\n    // the function logInAsync prompts the user to log in to their google account\r\n    GoogleAuthentication.logInAsync({\r\n      androidStandaloneAppClientId:\r\n        \"875721758742-9b11vs4d5un4t600bjtktp0ra5uctcqh.apps.googleusercontent.com\",\r\n      iosStandaloneAppClientId:\r\n        \"875721758742-i63ci73jfcunr66lb5v5q7tdeudrata9.apps.googleusercontent.com\",\r\n      scopes: [\"profile\", \"email\"],\r\n    })\r\n      .then((logInResult) => {\r\n        if (logInResult.type === \"success\") {\r\n          // if the login was successful, we must authenticate with firebase using the credentials\r\n          // that were returned from the logInAsync funtion\r\n          const { idToken, accessToken } = logInResult;\r\n          const credential = firebase.auth.GoogleAuthProvider.credential(\r\n            idToken,\r\n            accessToken\r\n          );\r\n\r\n          // then we add the user to the database and return true\r\n          AddUserToDB();\r\n          firebase.auth().signInWithCredential(credential);\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  SafeAreaView,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport logo from \"../assets/logo.png\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport ChirpTextBox from \"../components/ChirpTextBox\";\r\nimport TextAlert from \"../components/TextAlert\";\r\nimport AuthProviderButton from \"../components/AuthProviderButton\";\r\nimport GoogleSignIn from \"./GoogleSignIn\";\r\n\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function Login({ navigation }) {\r\n  // we use useStates so that whenever a state (e.g. email) changes, the componenent re-renders\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  function signInEmailPass() {\r\n    // we attempt to sign in with email and password provided by user\r\n    // firebase return different error codes that we use to display custom errors to user\r\n    auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n      if (error.code == \"auth/invalid-email\")\r\n        setEmailError(\"Email address is not valid.\");\r\n      else if (error.code == \"auth/user-not-found\")\r\n        setEmailError(\"User not found.\");\r\n      else if (error.code == \"auth/wrong-password\")\r\n        setPasswordError(\"Incorrect credentials given.\");\r\n      else {\r\n        setEmailError(\"Incorrect details. Try again.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function navToRegister() {\r\n    // use navigation prop (prop is provided automatically when using stack navigator)\r\n    navigation.navigate(\"Register\");\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Image style={styles.logo} source={logo}></Image>\r\n      <Text style={styles.headingText}>Sign In</Text>\r\n      <KeyboardAvoidingView style={styles.inputContainer} behavior=\"padding\">\r\n        <ChirpTextBox\r\n          placeholder=\"Email\"\r\n          onChangeText={setEmail}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={emailError}></TextAlert>\r\n        <ChirpTextBox\r\n          placeholder=\"Password\"\r\n          onChangeText={setPassword}\r\n          password={true}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={passwordError}></TextAlert>\r\n        <ChirpButton\r\n          text=\"Continue\"\r\n          testID=\"loginButton\"\r\n          onPress={signInEmailPass}\r\n          width=\"40%\"\r\n        ></ChirpButton>\r\n      </KeyboardAvoidingView>\r\n      <Text style={styles.orText}>or</Text>\r\n      <AuthProviderButton\r\n        text=\"Sign in with Google\"\r\n        testID=\"googleButton\"\r\n        type=\"google\"\r\n        onPress={() => GoogleSignIn()}\r\n      ></AuthProviderButton>\r\n      <Text\r\n        style={styles.registerText}\r\n        onPress={navToRegister}\r\n        testID=\"navToRegisterButton\"\r\n      >\r\n        Register new account\r\n      </Text>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  headingText: {\r\n    fontSize: 28,\r\n    color: theme.colors.text,\r\n    marginBottom: 15,\r\n  },\r\n  logo: {\r\n    width: 120,\r\n    height: 120,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n  },\r\n  orText: {\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    color: theme.colors.text,\r\n    width: \"40%\",\r\n    textAlign: \"center\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: theme.colors.text,\r\n  },\r\n  registerText: {\r\n    color: theme.colors.placeholderColor,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    marginBottom: 10,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport ChirpTextBox from \"../components/ChirpTextBox\";\r\nimport TextAlert from \"../components/TextAlert\";\r\nimport AuthProviderButton from \"../components/AuthProviderButton\";\r\nimport GoogleSignIn from \"./GoogleSignIn\";\r\nimport AddUserToDB from \"../functions/AddUserToDB\";\r\n\r\nimport auth from \"../config/FirebaseAuthInit\";\r\n\r\nexport default function Register({ navigation }) {\r\n  // we use useStates so that whenever a state (e.g. email) changes, the componenent re-renders\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  function createUserEmailPass() {\r\n    // if both validation functions return true it will create the user\r\n    if (validateName() && validatePassword()) {\r\n      auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((userCredential) => {\r\n          setEmailError(\"\");\r\n          // Signed in, add user to database\r\n          AddUserToDB(fullName);\r\n        })\r\n        .catch((error) => {\r\n          // firebase return different error codes that we use to display custom errors to user\r\n          switch (error.code) {\r\n            case \"auth/invalid-email\":\r\n              setEmailError(\"Email address is not valid.\");\r\n              break;\r\n            case \"auth/email-already-in-use\":\r\n              setEmailError(\"User already exists.\");\r\n              break;\r\n            default:\r\n              setEmailError(\"Incorrect details. Try again.\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function validatePassword() {\r\n    var check = false;\r\n    // here we perform 3 checks on the password\r\n    if (password.length < 8) {\r\n      setPasswordError(\"Password is too short.\");\r\n    } else if (!(/[A-Z]/.test(password) && /[0-9]/.test(password))) {\r\n      // use regex to check if password has capital letter and a number\r\n      setPasswordError(\"Password must include a capital and a number.\");\r\n    } else if (password != confirmPassword) {\r\n      // password must match the confirm password\r\n      setPasswordError(\"Passwords don't match.\");\r\n    } else {\r\n      // if all checks fail, we return true and clear any previous error\r\n      setPasswordError(\"\");\r\n      check = true;\r\n    }\r\n    return check;\r\n  }\r\n\r\n  function validateName() {\r\n    // the given name must be longer than 1 character long\r\n    if (fullName.length < 2) {\r\n      setNameError(\"Name is too short.\");\r\n      return false;\r\n    } else {\r\n      setNameError(\"\");\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function navToLogin() {\r\n    navigation.navigate(\"Login\");\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Text style={styles.headingText}>Register</Text>\r\n      <KeyboardAvoidingView style={styles.inputContainer} behavior=\"padding\">\r\n        <ChirpTextBox\r\n          placeholder=\"Full name\"\r\n          onChangeText={setFullName}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={nameError}></TextAlert>\r\n        <ChirpTextBox\r\n          placeholder=\"Email\"\r\n          onChangeText={setEmail}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={emailError}></TextAlert>\r\n        <ChirpTextBox\r\n          placeholder=\"Password\"\r\n          onChangeText={setPassword}\r\n          password={true}\r\n        ></ChirpTextBox>\r\n        <TextAlert text={passwordError}></TextAlert>\r\n        <ChirpTextBox\r\n          placeholder=\"Confirm password\"\r\n          onChangeText={setConfirmPassword}\r\n          password={true}\r\n        ></ChirpTextBox>\r\n      </KeyboardAvoidingView>\r\n      <ChirpButton\r\n        style={styles.continueButton}\r\n        text=\"Continue\"\r\n        onPress={createUserEmailPass}\r\n        width=\"40%\"\r\n        testID=\"registerButton\"\r\n      ></ChirpButton>\r\n      <Text style={styles.orText}>or</Text>\r\n      <View style={styles.line} />\r\n      <AuthProviderButton\r\n        text=\"Sign in with Google\"\r\n        type=\"google\"\r\n        onPress={() => GoogleSignIn()}\r\n        testID=\"googleButton\"\r\n      ></AuthProviderButton>\r\n      <Text\r\n        style={styles.loginText}\r\n        onPress={navToLogin}\r\n        testID=\"navToLoginButton\"\r\n      >\r\n        Already have an account? Sign in\r\n      </Text>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  headingText: {\r\n    fontSize: 24,\r\n    color: theme.colors.text,\r\n    marginTop: 15,\r\n    marginBottom: 10,\r\n  },\r\n  orText: {\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    color: theme.colors.text,\r\n    width: \"40%\",\r\n    textAlign: \"center\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: theme.colors.text,\r\n  },\r\n  loginText: {\r\n    color: theme.colors.placeholderColor,\r\n    fontSize: theme.dimensions.standardFontSize,\r\n    marginTop: 8,\r\n    marginBottom: 5,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image, Text } from \"react-native\";\r\nimport ChirpButton from \"../components/ChirpButton\";\r\nimport FadeIn from \"react-native-fade-in-image\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport tutorial1 from \"../assets/tutorial1.png\";\r\nimport tutorial2 from \"../assets/tutorial2.png\";\r\nimport tutorial3 from \"../assets/tutorial3.png\";\r\n\r\nexport default function Tutorial({ navigation }) {\r\n  // create the image array\r\n  var images = [tutorial1, tutorial2, tutorial3];\r\n\r\n  var numImages = images.length;\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  function nextPressed() {\r\n    // when we arent at the end of the image array, add one to the currentIndex state variable\r\n    if (currentIndex < numImages - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  function navToRegister() {\r\n    navigation.navigate(\"Register\");\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.headerText}>Tutorial</Text>\r\n      <FadeIn\r\n        style={{\r\n          height: \"85%\",\r\n          width: \"85%\",\r\n        }}\r\n      >\r\n        {/* We set the image source to the current tutorial image */}\r\n        <Image\r\n          style={styles.tutorial}\r\n          source={images[currentIndex]}\r\n          resizeMode=\"contain\"\r\n        ></Image>\r\n      </FadeIn>\r\n      {/* here we either show Skip and Next button or Exit button on the last image */}\r\n      {currentIndex < numImages - 1 ? (\r\n        <View style={styles.bottomButtons}>\r\n          <ChirpButton onPress={navToRegister} width=\"30%\" text=\"Skip\" />\r\n          <ChirpButton onPress={nextPressed} width=\"30%\" text=\"Next\" />\r\n        </View>\r\n      ) : (\r\n        <ChirpButton onPress={navToRegister} width=\"30%\" text=\"Exit\" />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.colors.hazeText,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  headerText: {\r\n    fontSize: theme.dimensions.standardFontSize + 7,\r\n    color: theme.colors.jet,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tutorial: {\r\n    borderRadius: 30,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    resizeMode: \"contain\",\r\n    shadowColor: \"#000\",\r\n    // blurRadius: 250,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    // elevation: 5,\r\n  },\r\n  bottomButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Tutorial from \"./Tutorial\";\r\n\r\n// we use a stack navigator for the auth screens\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function AuthContainer() {\r\n  // in each stack screen we hide the phones header that shows user the app name\r\n  return (\r\n    <NavigationContainer style={styles.container}>\r\n      <Stack.Navigator initialRouteName={\"Tutorial\"}>\r\n        <Stack.Screen\r\n          name=\"Tutorial\"\r\n          component={Tutorial}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={Login}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Register\"\r\n          component={Register}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport { theme } from \"../assets/Theme\";\r\n\r\nexport default function NoWifiScreen() {\r\n  // This screen contains a wifi off icon and help text to inform user they need internet to use the app.\r\n  return (\r\n    <View style={styles.container} testID=\"loading\">\r\n      <MaterialCommunityIcons name=\"wifi-off\" size={65} color=\"white\" />\r\n      <Text style={styles.text}>{\"\\n\"}No internet connection detected</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StatusBar, StyleSheet, View, LogBox } from \"react-native\";\r\nimport { useNetInfo } from \"@react-native-community/netinfo\";\r\n\r\nimport { theme } from \"./assets/Theme\";\r\nimport AppContainer from \"./AppContainer\";\r\nimport AuthContainer from \"./auth/AuthContainer\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport auth from \"./config/FirebaseAuthInit\";\r\nimport NoWifiScreen from \"./components/NoWifiScreen\";\r\n\r\n// Firebase sets some timers for a long period, which will trigger some warnings.\r\n// here we silence logs that match the given string.\r\nLogBox.ignoreLogs([`Setting a timer for a long period`]);\r\n\r\nexport default function App() {\r\n  // here we use a hook to see if a user is logged in\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  // here we use a hook to get internet connection status\r\n  const netInfo = useNetInfo();\r\n\r\n  //if no internet, only the no wifi screen is shown, nothing else.\r\n  if (!netInfo.isConnected) {\r\n    return <NoWifiScreen />;\r\n  }\r\n\r\n  // if the user auth state is loading, we show loading screen\r\n  if (loading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  // if the user is null, we return a view with the auth container component\r\n  // if the user is not null (i.e. logged in) we return with the app container component\r\n  return (\r\n    <View style={styles.container}>\r\n      {user ? <AppContainer /> : <AuthContainer />}\r\n    </View>\r\n  );\r\n}\r\n\r\n// below is a style sheet. style sheets contain properties with styling that can\r\n// be passed in to the style prop of a component\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n    paddingTop: StatusBar.currentHeight + 2,\r\n  },\r\n});\r\n"],"sourceRoot":""}